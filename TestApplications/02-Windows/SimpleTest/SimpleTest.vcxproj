<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{6060ae71-c0d3-4379-89fd-ea1394a5e1b3}</ProjectGuid>
    <RootNamespace>SimpleTest</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
    <Import Project="..\..\01-Shared\SimpleTest\SimpleTest.vcxitems" Label="Shared" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)..\bin\$(Configuration)\$(Platform)\</OutDir>
    <IntDir>$(Configuration)bin\$(Platform)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)..\bin\$(Configuration)\$(Platform)\</OutDir>
    <IntDir>$(Configuration)bin\$(Platform)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)..\bin\$(Configuration)\$(Platform)\</OutDir>
    <IntDir>$(Configuration)bin\$(Platform)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)..\bin\$(Configuration)\$(Platform)\</OutDir>
    <IntDir>$(Configuration)bin\$(Platform)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeaderFile />
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Elysium.Core.lib;Elysium.Core.Math.lib;Elysium.Graphics.lib;Elysium.Graphics.Presentation.lib;Elysium.Graphics.Rendering.Vulkan.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)Assets" mkdir "$(TargetDir)Assets"
if not exist "$(TargetDir)Assets\Vulkan" mkdir "$(TargetDir)Assets\Vulkan"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\VertexShader.vert" -o "$(TargetDir)Assets\Vulkan\VertexShader.spv"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\FragmentShader.frag" -o "$(TargetDir)Assets\Vulkan\FragmentShader.spv"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeaderFile />
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>Elysium.Core.lib;Elysium.Core.Math.lib;Elysium.Graphics.lib;Elysium.Graphics.Presentation.lib;Elysium.Graphics.Rendering.Vulkan.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)Assets" mkdir "$(TargetDir)Assets"
if not exist "$(TargetDir)Assets\Vulkan" mkdir "$(TargetDir)Assets\Vulkan"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\VertexShader.vert" -o "$(TargetDir)Assets\Vulkan\VertexShader.spv"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\FragmentShader.frag" -o "$(TargetDir)Assets\Vulkan\FragmentShader.spv"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeaderFile />
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\bin\Debug\x64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>Elysium.Core.lib;Elysium.Core.Math.lib;Elysium.Graphics.lib;Elysium.Graphics.Presentation.lib;Elysium.Graphics.Rendering.Vulkan.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)Assets" mkdir "$(TargetDir)Assets"
if not exist "$(TargetDir)Assets\Vulkan" mkdir "$(TargetDir)Assets\Vulkan"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\VertexShader.vert" -o "$(TargetDir)Assets\Vulkan\VertexShader.spv"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\FragmentShader.frag" -o "$(TargetDir)Assets\Vulkan\FragmentShader.spv"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PrecompiledHeaderFile />
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\..\..\..\bin\Release\x64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>Elysium.Core.lib;Elysium.Core.Math.lib;Elysium.Graphics.lib;Elysium.Graphics.Presentation.lib;Elysium.Graphics.Rendering.Vulkan.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(TargetDir)Assets" mkdir "$(TargetDir)Assets"
if not exist "$(TargetDir)Assets\Vulkan" mkdir "$(TargetDir)Assets\Vulkan"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\VertexShader.vert" -o "$(TargetDir)Assets\Vulkan\VertexShader.spv"
D:\VulkanSDK\1.2.162.1\Bin\glslc.exe "$(SolutionDir)TestApplications\01-Shared\SimpleTest\Assets\Vulkan\FragmentShader.frag" -o "$(TargetDir)Assets\Vulkan\FragmentShader.spv"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="SimpleTest.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\Libraries\02-Windows\Elysium.Graphics.Presentation\Elysium.Graphics.Presentation.vcxproj">
      <Project>{67a641bb-b207-4c58-88e9-a5ae39f8cff0}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Libraries\02-Windows\Elysium.Graphics.Rendering.DirectX12\Elysium.Graphics.Rendering.DirectX12.vcxproj">
      <Project>{3f4af807-0f51-48d3-8ca4-19ff4e67cc01}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Libraries\02-Windows\Elysium.Graphics.Rendering.Vulkan\Elysium.Graphics.Rendering.Vulkan.vcxproj">
      <Project>{b010f920-aede-4afd-8020-6bf0f55fa38a}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Libraries\02-Windows\Elysium.Graphics\Elysium.Graphics.vcxproj">
      <Project>{206291a0-5e5e-42d6-9dfa-f9b583c27092}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Text Update="D:\GitHub\Repos\Elysium-Graphics-cpp\TestApplications\01-Shared\SimpleTest\Assets\SomeShader.spv">
      <FileType>Document</FileType>
    </Text>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>